// Excludes the old glenohumeral joint to redefine it with an offset

// Deactivated the GHReaction forces to eventually redefine them
MechObjectExclude = 
arrcat(ObjSearchRecursive("Main.HumanModel.BodyModel.SelectedOutput.Right.ShoulderArm.JointReactionForce.GlenoHumeral_*","AnyMechObject"),
ObjSearchRecursive("Main.HumanModel.BodyModel.Right.ShoulderArm.Jnt.GHReactions","*","AnyMechObject"),
ObjSearchRecursive("Main.HumanModel.BodyModel.Right.ShoulderArm.Jnt.GlenoHumeralJoint","*","AnyMechObject"));

//Excludes the old GHJoint for in the calibration sequence 
//Comment if not using MusclesHill model 
//

#if BM_ARM_MUSCLES_RIGHT == _MUSCLES_3E_HILL_
Main.HumanModel.Calibration.RightArmCalibration0.ArmCalibrationStudy0.MechObjectExclude =  
arrcat( 
ObjSearchRecursive("Main.HumanModel.BodyModel.Right.ShoulderArm.Jnt.GlenoHumeralJoint","*","AnyMechObject")); 

Main.HumanModel.Calibration.RightArmCalibration1.ArmCalibrationStudy1.MechObjectExclude =  
arrcat( 
ObjSearchRecursive("Main.HumanModel.BodyModel.Right.ShoulderArm.Jnt.GlenoHumeralJoint","*","AnyMechObject")); 

Main.HumanModel.Calibration.RightArmCalibration2.ArmCalibrationStudy2.MechObjectExclude =  
arrcat( 
ObjSearchRecursive("Main.HumanModel.BodyModel.Right.ShoulderArm.Jnt.GlenoHumeralJoint","*","AnyMechObject")); 

Main.HumanModel.Calibration.RightArmCalibration3.ArmCalibrationStudy3.MechObjectExclude =  
arrcat( 
ObjSearchRecursive("Main.HumanModel.BodyModel.Right.ShoulderArm.Jnt.GlenoHumeralJoint","*","AnyMechObject")); 

Main.HumanModel.Calibration.RightArmCalibration4.ArmCalibrationStudy4.MechObjectExclude =  
arrcat( 
ObjSearchRecursive("Main.HumanModel.BodyModel.Right.ShoulderArm.Jnt.GlenoHumeralJoint","*","AnyMechObject")); 

Main.HumanModel.Calibration.RightArmCalibration5.ArmCalibrationStudy5.MechObjectExclude =  
arrcat( 
ObjSearchRecursive("Main.HumanModel.BodyModel.Right.ShoulderArm.Jnt.GlenoHumeralJoint","*","AnyMechObject")); 
#endif // BM_ARM_MUSCLES_RIGHT == _MUSCLES_3E_HILL_

// New nodes on the scapula for the offseted gh 
Main.Seg.Scapula = {  
  
  // New gh node = offset of the GHReactionCenterNodeRotated which is the center of the glenoid rotated in the local glenoid coordinate system(offset in mm)
  AnyRefNode gh_offset = {
    // Matrix to rotate the GHReactionCenterNodeRotated in the ISB coordinate system  
    AnyMat33 Transform_ISB = {{-1,0,0},{0,1,0},{0,0,-1}};
    
    // Offset transformed in the scapular ISB coordinate system
    AnyFloat Offset = .GHReactionCenterNodeRotated.ARel * Transform_ISB * Main.InputVariables.glenoid_offset' / 1000; 
    
    // Offset the original position of the gh centernode
    sRel = .GHReactionCenterNodeRotated.sRel + Offset';
    
 //   Rotates the node so it has the same direction as the ISB coordinate system
 ARel =  .GHReactionCenterNodeRotated.ARel * Transform_ISB;
    AnyDrawRefFrame drw = {
      Visible = Off;
      RGB = {1,0,0};
    };  

  }; //gh_offseted
 
  gh = {AnyDrawRefFrame drw = {
      Visible=Off;
      RGB = {0, 0,0};
    };
  
  };
  
  
}; //Seg.Scapula


Main.Seg.Humerus = {
  
  // For now, position ajusted so that the humerus remains at the same place than the one at 15deg of coronal abduction
  // The position corresponds to the centernode position of the glenoid
  AnyRefNode gh_offset = {
    // positions at 15deg of coronal abduction
    AnyVec3 Centernode_r = {-0.06221421, 1.639598, 0.1768964};
    AnyVec3 Humerus_r = {-0.04763792, 1.646159, 0.1970712};
    AnyMat33 Humerus_Axes = {{0.3781873, -0.1113459, -0.9190084}, 
{0.2033087, 0.9784929, -0.03488805}, 
{0.9031279, -0.1736482, 0.3926912}};
    
    //Humeral center of rotation in rTSA reference position
    // (global_centernode - global_humerus position) = offset between the two nodes in the global coordinate system
    // the multiply by Humerus.Axes to convert in local humeral coordinate system
//    AnyVec3 humerus_cor_pos_reference = (Centernode_r - Humerus_r) * Humerus_Axes; //after initialpos for 15deg abduction = {-0.0250669, -0.001293564, 0.005702167}
     
    // Position reference ajustee pour correspondre a distance minimale de AD dans l'article de werthel et al. (11.1 mm pour le delta III)
    AnyVec3 humerus_cor_pos_reference = {-0.0111, 0.0, 0};
//    AnyVec3 humerus_cor_pos_reference = {-0.0250669, 0.0, 0};
    
    sRel = humerus_cor_pos_reference + Main.InputVariables.humeral_offset/1000; 
    AnyDrawRefFrame drw = {
      Visible=On;
      RGB = {1, 0,0};
    };
    
  };
  
  
  gh = {AnyDrawRefFrame drw = {
      Visible=On;
      RGB = {0, 0,0};
    };
};
  
}; // Humerus

// New glenohumeral joint
// Ball And Socket joint between the Scapular new gh node that will be offseted and the new humeral gh node
Main.Jnt = {
  
  // Definition of GH joint
  AnySphericalJoint MyGlenoHumeralJoint = {
    AnyRefNode &scapula_gh = ..Seg.Scapula.gh_offset;
    AnyRefNode &humerus_gh = ..Seg.Humerus.gh_offset; 
    
    //These are the reactions of the GH joint they are normally set to "Off Off Off" if the file 
    // GHReactions.any is being used, if this is not the case the reactions should be set to "On On On"
    #if GHReactionsOn == 1    
    Constraints.Reaction.Type={Off,Off,Off};
    #endif
    
    // Reactivates the ghjoint glenohumeral joint reaction forces   
    #if GHReactionsOn == 0
    Constraints.Reaction.Type={On,On,On};
    #endif
    
    Orientation = {
      // These settings are kept to mimic the  
      // previous implementation.
      Type = RotAxesAngles;
      Axis1 = y;
      Axis2 = z;
      Axis3 = y;
    };
  };
  
}; //Jnt


// hides GHReactions nodes
Main.HumanModel.BodyModel.Right.ShoulderArm.Jnt.GHReactions.EdgeLine1.line.Visible = Off;
Main.HumanModel.BodyModel.Right.ShoulderArm.Jnt.GHReactions.EdgeLine2.line.Visible = Off;
Main.HumanModel.BodyModel.Right.ShoulderArm.Jnt.GHReactions.EdgeLine3.line.Visible = Off;
Main.HumanModel.BodyModel.Right.ShoulderArm.Jnt.GHReactions.EdgeLine4.line.Visible = Off;
Main.HumanModel.BodyModel.Right.ShoulderArm.Jnt.GHReactions.EdgeLine5.line.Visible = Off;
Main.HumanModel.BodyModel.Right.ShoulderArm.Jnt.GHReactions.EdgeLine6.line.Visible = Off;
Main.HumanModel.BodyModel.Right.ShoulderArm.Jnt.GHReactions.EdgeLine7.line.Visible = Off;
Main.HumanModel.BodyModel.Right.ShoulderArm.Jnt.GHReactions.EdgeLine8.line.Visible = Off;

Main.HumanModel.BodyModel.Right.ShoulderArm.Seg.Scapula.GHReactionCenterNodeRotated.CavityEdgeNode1.node.Visible = Off;
Main.HumanModel.BodyModel.Right.ShoulderArm.Seg.Scapula.GHReactionCenterNodeRotated.CavityEdgeNode2.node.Visible = Off;
Main.HumanModel.BodyModel.Right.ShoulderArm.Seg.Scapula.GHReactionCenterNodeRotated.CavityEdgeNode3.node.Visible = Off;
Main.HumanModel.BodyModel.Right.ShoulderArm.Seg.Scapula.GHReactionCenterNodeRotated.CavityEdgeNode4.node.Visible = Off;
Main.HumanModel.BodyModel.Right.ShoulderArm.Seg.Scapula.GHReactionCenterNodeRotated.CavityEdgeNode5.node.Visible = Off;
Main.HumanModel.BodyModel.Right.ShoulderArm.Seg.Scapula.GHReactionCenterNodeRotated.CavityEdgeNode6.node.Visible = Off;
Main.HumanModel.BodyModel.Right.ShoulderArm.Seg.Scapula.GHReactionCenterNodeRotated.CavityEdgeNode7.node.Visible = Off;
Main.HumanModel.BodyModel.Right.ShoulderArm.Seg.Scapula.GHReactionCenterNodeRotated.CavityEdgeNode8.node.Visible = Off;

